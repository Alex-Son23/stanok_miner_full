version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: bash -lc "python manage.py migrate && python manage.py seed_levels && python manage.py runbot"
  
  admin:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/admin
    command: bash -lc "python manage.py runserver"

volumes:
  db_data:
